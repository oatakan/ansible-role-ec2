---

- include_tasks: check_subnet.yml

- name: Create EC2 security group
  amazon.aws.ec2_group:
    name: "{{ ec2_security_group }}"
    description: all ports open
    region: "{{ ec2_region }}"
    vpc_id: "{{ ec2_vpc_id }}"
    rules:
      - proto: all
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  when: ec2_exact_count >= 1
  tags:
    - always
    - provision

- include_tasks: "{{ ec2_use_module }}_module.yml"

- name: Wait for instance creation to complete
  async_status:
    jid: "{{ item.ansible_job_id }}"
  register: instances
  until: instances.finished
  retries: "{{ instance_wait_retry_limit }}"
  loop: "{{ ec2_jobs.results }}"
  tags:
    - always
    - provision

- name: Add any secondary private ip addresses
  amazon.aws.ec2_eni:
    eni_id: "{{ item.instances[0].network_interfaces[0].network_interface_id }}"
    region: "{{ ec2_region }}"
    state: present
    secondary_private_ip_addresses: "{{ (item.item.item.networks | map(attribute='ip') | list)[1:] }}"
  loop: "{{ instances.results }}"
  when:
    - instances is changed
    - ec2_exact_count >= 1
    - item.item.item.networks is defined
    - item.item.item.networks | length > 1

- name: Waiting for public ip address to be available
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    instance_ids: "{{ instances.results | map(attribute='instance_ids') | list | flatten }}"
  register: get_instances_info
  until:
    - get_instances_info.instances is defined
    - instances.results|length == (get_instances_info.instances | selectattr('public_ip_address', 'defined') | list | length)
  retries: "{{ instance_wait_retry_limit }}"
  when:
    - instances is changed
    - ec2_exact_count >= 1

- name: Waiting for servers to come online
  wait_for:
    host: "{{ item.public_ip_address }}"
    port: "{{ item.tags.ansible_port | default(ansible_port) }}"
    timeout: "{{ instance_wait_connection_timeout }}"
  loop: "{{ get_instances_info.instances }}"
  when:
    - instances is changed
    - ec2_exact_count >= 1
    - item.public_ip_address is defined
  ignore_errors: true
  tags:
    - always
    - provision